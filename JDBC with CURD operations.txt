import java.sql.*;
import java.util.Scanner;

public class Main {
    private static final String URL = "jdbc:mysql://localhost:3306/CinemaDB";
    private static final String USER = "root";
    private static final String PASSWORD = "root";
    private static Connection conn;
    private static Scanner scanner = new Scanner(System.in);
    
    public static void connect() {
        try {
            conn = DriverManager.getConnection(URL, USER, PASSWORD);
            System.out.println("Database connected successfully!");
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
//create
    public static void insertMovie() {
        System.out.print("Enter Movie Title: ");
        String title = scanner.nextLine();
        System.out.print("Enter Genre: ");
        String genre = scanner.nextLine();
        System.out.print("Enter Director: ");
        String director = scanner.nextLine();
        System.out.print("Enter Release Year: ");
        int releaseYear = scanner.nextInt();
        scanner.nextLine(); // Consume newline

        String sql = "INSERT INTO movies (title, genre, director, release_year) VALUES (?, ?, ?, ?)";
        try (PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setString(1, title);
            stmt.setString(2, genre);
            stmt.setString(3, director);
            stmt.setInt(4, releaseYear);
            stmt.executeUpdate();
            System.out.println("Movie added successfully!");
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    //read
    public static void getMovies() {
        String sql = "SELECT * FROM movies";
        try (Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(sql)) {
            System.out.println("\nMovie List:");
            System.out.println("ID | Title | Genre | Director | Release Year");
            while (rs.next()) {
                System.out.println(rs.getInt("id") + " | " +
                        rs.getString("title") + " | " +
                        rs.getString("genre") + " | " +
                        rs.getString("director") + " | " +
                        rs.getInt("release_year"));
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    //update
    public static void updateMovie() {
        System.out.print("Enter Movie ID to update: ");
        int id = scanner.nextInt();
        scanner.nextLine(); // Consume newline

        System.out.print("Enter New Title: ");
        String title = scanner.nextLine();
        System.out.print("Enter New Genre: ");
        String genre = scanner.nextLine();
        System.out.print("Enter New Director: ");
        String director = scanner.nextLine();
        System.out.print("Enter New Release Year: ");
        int releaseYear = scanner.nextInt();
        scanner.nextLine(); 

        String sql = "UPDATE movies SET title=?, genre=?, director=?, release_year=? WHERE id=?";
        try (PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setString(1, title);
            stmt.setString(2, genre);
            stmt.setString(3, director);
            stmt.setInt(4, releaseYear);
            stmt.setInt(5, id);
            stmt.executeUpdate();
            System.out.println("Movie updated successfully!");
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    //delete
    public static void deleteMovie() {
        System.out.print("Enter Movie ID to delete: ");
        int id = scanner.nextInt();
        scanner.nextLine(); // Consume newline

        String sql = "DELETE FROM movies WHERE id=?";
        try (PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setInt(1, id);
            int rowsAffected = stmt.executeUpdate();
            if (rowsAffected > 0) {
                System.out.println("Movie deleted successfully!");
            } else {
                System.out.println("Movie ID not found!");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    public static void main(String[] args) {
        connect(); 

        while (true) {
            System.out.println("\nCinema Management System");
            System.out.println("1. Add Movie");
            System.out.println("2. View Movies");
            System.out.println("3. Update Movie");
            System.out.println("4. Delete Movie");
            System.out.println("5. Exit");
            System.out.print("Enter your choice: ");
            int choice = scanner.nextInt();
            scanner.nextLine(); 

            switch (choice) {
                case 1:
                    insertMovie();
                    break;
                case 2:
                    getMovies();
                    break;
                case 3:
                    updateMovie();
                    break;
                case 4:
                    deleteMovie();
                    break;
                case 5:
                    System.out.println("Exiting...");
                    scanner.close();
                    try {
                        if (conn != null) conn.close();
                    } catch (SQLException e) {
                        e.printStackTrace();
                    }
                    return;
                default:
                    System.out.println("Invalid choice! Please enter again.");
            }
        }
    }
}
