import java.util.Scanner;

interface MovieManager {
    void addMovie(String name, String time, String format, String theater, double price);
    void listMovies();
}

interface TicketManager {
    void bookTicket(String movieName, int persons);
}

class CinemaSystem implements MovieManager, TicketManager {
    private static class Movie {
        String name, time, format, theater;
        double price;

        Movie(String name, String time, String format, String theater, double price) {
            this.name = name;
            this.time = time;
            this.format = format;
            this.theater = theater;
            this.price = price;
        }
    }

    private final Movie[] movies = new Movie[10];
    private int movieCount = 0;

    public CinemaSystem() {
        addMovie("Avengers", "7:00 PM", "3D", "Screen 1", 250.00);
        addMovie("Inception", "9:00 PM", "2D", "Screen 2", 200.00);
        addMovie("Titanic", "6:30 PM", "2D", "Screen 3", 180.00);
    }

    // Synchronized method to ensure thread safety while adding movies
    public synchronized void addMovie(String name, String time, String format, String theater, double price) {
        if (movieCount >= movies.length) {
            System.out.println("Maximum movie limit reached.");
            return;
        }
        movies[movieCount++] = new Movie(name, time, format, theater, price);
        System.out.println("Movie added successfully!");
    }

    public void listMovies() {
        if (movieCount == 0) {
            System.out.println("No movies available.");
            return;
        }
        System.out.println("Available Movies:");
        for (int i = 0; i < movieCount; i++) {
            Movie movie = movies[i];
            System.out.printf("%d. %s | Time: %s | Format: %s | Theater: %s | Price: %.2f\n",
                    i + 1, movie.name, movie.time, movie.format, movie.theater, movie.price);
        }
    }

    // Synchronized method to ensure thread safety while booking tickets
    public synchronized void bookTicket(String movieName, int persons) {
        if (persons <= 0) {
            System.out.println("Invalid number of persons. Must be greater than zero.");
            return;
        }
        for (int i = 0; i < movieCount; i++) {
            Movie movie = movies[i];
            if (movie.name.equalsIgnoreCase(movieName)) {
                double totalCost = movie.price * persons;
                System.out.printf("Ticket booked for '%s'. Total cost: %.2f for %d persons.\n",
                        movie.name, totalCost, persons);
                return;
            }
        }
        System.out.println("Movie not found. Booking failed.");
    }
}

// Thread class for adding a movie
class MovieAdder extends Thread {
    private final CinemaSystem cinema;
    private final String name, time, format, theater;
    private final double price;

    public MovieAdder(CinemaSystem cinema, String name, String time, String format, String theater, double price) {
        this.cinema = cinema;
        this.name = name;
        this.time = time;
        this.format = format;
        this.theater = theater;
        this.price = price;
    }

    @Override
    public void run() {
        cinema.addMovie(name, time, format, theater, price);
    }
}

// Runnable class for booking tickets
class TicketBooker implements Runnable {
    private final CinemaSystem cinema;
    private final String movieName;
    private final int persons;

    public TicketBooker(CinemaSystem cinema, String movieName, int persons) {
        this.cinema = cinema;
        this.movieName = movieName;
        this.persons = persons;
    }

    @Override
    public void run() {
        cinema.bookTicket(movieName, persons);
    }
}

public class CinemaManagement {
    public static void main(String[] args) {
        CinemaSystem cinema = new CinemaSystem();
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("\nWelcome to Cinema Management System");
            System.out.println("1. Admin Login");
            System.out.println("2. Customer Login");
            System.out.println("3. Exit");
            System.out.print("Choose an option: ");

            if (!scanner.hasNextInt()) {
                System.out.println("Invalid input. Please enter a valid number.");
                scanner.next();
                continue;
            }
            int choice = scanner.nextInt();
            scanner.nextLine();

            if (choice == 1) {
                System.out.println("\nAdmin Panel");
                System.out.println("1. Add Movie");
                System.out.println("2. View Movies");
                System.out.println("3. Back to Main Menu");
                System.out.print("Choose an option: ");

                if (!scanner.hasNextInt()) {
                    System.out.println("Invalid input. Please enter a valid number.");
                    scanner.next();
                    continue;
                }
                int adminChoice = scanner.nextInt();
                scanner.nextLine();

                if (adminChoice == 1) {
                    System.out.print("Enter movie name: ");
                    String name = scanner.nextLine();
                    System.out.print("Enter Movie Time: ");
                    String time = scanner.nextLine();
                    System.out.print("Enter format (2D/3D): ");
                    String format = scanner.nextLine();
                    System.out.print("Enter Screen: ");
                    String theater = scanner.nextLine();
                    System.out.print("Enter ticket price: ");

                    if (!scanner.hasNextDouble()) {
                        System.out.println("Invalid price. Please enter a valid number.");
                        scanner.next();
                        continue;
                    }
                    double price = scanner.nextDouble();

                    // Start a new thread to add the movie
                    MovieAdder movieAdder = new MovieAdder(cinema, name, time, format, theater, price);
                    movieAdder.setPriority(Thread.NORM_PRIORITY); // Normal priority for adding movies
                    movieAdder.start();
                } else if (adminChoice == 2) {
                    cinema.listMovies();
                }
            } else if (choice == 2) {
                System.out.println("\nCustomer Panel");
                cinema.listMovies();
                System.out.print("Enter the movie name to book: ");
                String movieName = scanner.nextLine();
                System.out.print("Enter number of persons: ");

                if (!scanner.hasNextInt()) {
                    System.out.println("Invalid input. Please enter a valid number.");
                    scanner.next();
                    continue;
                }
                int persons = scanner.nextInt();

                // Start a new thread to book the ticket
                TicketBooker ticketBooker = new TicketBooker(cinema, movieName, persons);
                Thread ticketThread = new Thread(ticketBooker);
                ticketThread.setPriority(Thread.MAX_PRIORITY); // High priority for ticket booking
                ticketThread.start();
            } else if (choice == 3) {
                System.out.println("Thank you for using the Cinema Management System. Goodbye!");
                break;
            } else {
                System.out.println("Invalid choice. Please try again.");
            }
        }
        scanner.close();
    }
}
